name: Docker Build, Scan and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  scan:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.get-images.outputs.images }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Install yq
      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y jq yq

      # Extract image names from docker-compose.yml
      - id: get-images
        run: |
          images=$(yq e '.services[].image' docker-compose.yml | jq -R -s -c 'split("\n")[:-1]')
          echo "images=$images" >> $GITHUB_OUTPUT

  trivy-scan:
    needs: scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.scan.outputs.images) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull image
        run: docker pull ${{ matrix.image }}

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.22.0
        with:
          scan-type: 'image'
          image-ref: ${{ matrix.image }}
          format: 'table'
          exit-code: '1' # fail if HIGH/CRITICAL
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  tests:
    runs-on: ubuntu-latest
    needs: trivy-scan
    if: success()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Selenium tests
        run: |
          echo "Running Selenium tests..."
          pytest tests/selenium/
