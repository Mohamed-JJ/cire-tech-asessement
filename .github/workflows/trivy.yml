name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '35 15 * * 2' # Every Tuesday at 15:35 UTC

permissions:
  contents: read

jobs:
  extract-images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.get-images.outputs.images }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq + jq
        run: sudo apt-get update && sudo apt-get install -y jq yq

      # Parse image names from the specific docker-compose file
      - id: get-images
        run: |
          images=$(yq e '.services[].image' cire-soc-challenge/wazuh-docker/single-node/docker-compose.yml | jq -R -s -c 'split("\n")[:-1]')
          echo "images=$images" >> $GITHUB_OUTPUT

  trivy-scan:
    needs: extract-images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.extract-images.outputs.images) }}
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Pull image
        run: docker pull ${{ matrix.image }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ matrix.image }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results-${{ matrix.image }}.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results-${{ matrix.image }}.sarif'

  selenium-tests:
    needs: trivy-scan
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Selenium tests
        run: |
          echo "Running Selenium tests..."
          pytest tests/selenium/
