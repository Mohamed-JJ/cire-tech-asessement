name: Wazuh Docker Compose CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-and-test:
    name: Deploy Stack and Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          docker-compose \
          chromium-browser \
          xvfb
        
    - name: Generate self-signed SSL certificate for testing
      run: |
        mkdir -p config/nginx/ssl
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout config/nginx/ssl/server.key \
          -out config/nginx/ssl/server.crt \
          -subj '/C=US/ST=Test/L=Test/O=Wazuh-CI/OU=Test/CN=localhost'
        ls -la config/nginx/ssl/
        
    - name: Start Wazuh stack with Docker Compose
      run: |
        # Start services in background
        docker-compose -f docker-compose.ci.yml --profile ci up -d
        
        # Wait for services to start
        echo "Waiting for services to start..."
        sleep 30
        
        # Check service status
        docker-compose -f docker-compose.ci.yml ps
        
    - name: Wait for services to be ready
      run: |
        echo "Waiting for Wazuh services to be fully ready..."
        
        # Wait for Nginx health check
        timeout 300 bash -c 'until curl -f http://localhost/health; do sleep 10; echo "Waiting for Nginx..."; done'
        
        # Wait for Wazuh Dashboard (through Nginx HTTPS)
        timeout 300 bash -c 'until curl -f -k https://localhost/app/login; do sleep 10; echo "Waiting for Wazuh Dashboard..."; done'
        
        # Wait for Wazuh API
        timeout 300 bash -c 'until curl -f http://localhost:55000/; do sleep 10; echo "Waiting for Wazuh API..."; done'
        
        echo "All services are ready!"
        
    - name: Create test environment
      run: |
        cp tests/.env.example tests/.env
        cat >> tests/.env << EOF
        WAZUH_HOST=localhost
        WAZUH_PORT=443
        WAZUH_DASHBOARD_PORT=443
        WAZUH_API_PORT=55000
        WAZUH_USE_HTTPS=true
        HEADLESS=true
        CI=true
        WAZUH_TEST_USER=admin
        WAZUH_TEST_PASSWORD=SecretPassword
        EOF
        
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
        
    - name: Run smoke tests
      run: |
        export CI=true
        export HEADLESS=true
        ./tests/run_tests.sh smoke
        
    - name: Run API tests
      run: |
        export CI=true
        ./tests/run_tests.sh api
        
    - name: Run UI tests
      run: |
        export CI=true
        export HEADLESS=true
        ./tests/run_tests.sh ui
        
    - name: Check HTTPS functionality
      run: |
        echo "Testing HTTPS endpoints..."
        
        # Test HTTPS redirect
        echo "1. Testing HTTP to HTTPS redirect:"
        curl -I http://localhost/ || true
        
        # Test HTTPS access (self-signed cert)
        echo "2. Testing HTTPS access with self-signed certificate:"
        curl -I -k https://localhost/ || true
        
        # Test security headers
        echo "3. Testing security headers:"
        curl -I -k https://localhost/ | grep -E "(Strict-Transport-Security|X-Frame-Options|X-Content-Type-Options)"
        
        # Test API through HTTPS proxy
        echo "4. Testing API through HTTPS proxy:"
        curl -k https://localhost/api/ || true
        
    - name: Collect service logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Status ==="
        docker-compose -f docker-compose.ci.yml ps
        
        echo "=== Service Logs ==="
        echo "--- Nginx ---"
        docker-compose -f docker-compose.ci.yml logs nginx
        
        echo "--- Wazuh Manager ---"
        docker-compose -f docker-compose.ci.yml logs wazuh-manager
        
        echo "--- Wazuh Dashboard ---"
        docker-compose -f docker-compose.ci.yml logs wazuh-dashboard
        
        echo "--- Wazuh Indexer ---"
        docker-compose -f docker-compose.ci.yml logs wazuh-indexer
        
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: tests/reports/
        retention-days: 30
        
    - name: Cleanup
      if: always()
      run: |
        docker-compose -f docker-compose.ci.yml down -v
        docker system prune -f
